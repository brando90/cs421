exp =
    exp + next
  | exp - next
  | next

next =
    next * dealfun
  | dealfun

dealfun =
    atomic
  | fun IDENT -> exp

atomic
     IDENT
   | INT
   | ( exp )

fun x -> 1 + fun x -> 1 + 1
the above parses it as:
(fun x -> 1) + (fun x -> 1 + 1)

-------------------- correct way

exp =
     pure_exp + next
   | pure_exp - next
   | next

next =
     pure_next * dealfun
   | dealfun

dealfun =
     fun IDENT -> exp
   | atomic

pure_exp =
     pure_exp + pure_next
   | pure_exp - pure_next
   | pure_next

pure_next =
     pure_next * atomic
   | atomic

atomic
     IDENT
   | INT
   | ( exp )


fun x -> 1 + fun x -> 1 + 1

1 + fun x -> 1 + 17

-------------------- correct way

exp =
  nof +
